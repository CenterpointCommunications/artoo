---
hero: true
social: true
catcher: true

title: Artoo
author: The Hybrid Group
description: Artoo is a micro-framework for robotics. It provides a simple, but powerful DSL (domain-specific language) for robots and physical computing.
layout: home

hero_title: "We believe that it's time to bring <br> Ruby and Robots together."
hero_subtitle: "Artoo makes robotics <a href='/documentation/getting-started'>Simple</a> and <a href='/documentation/platforms'>Extensible</a>."

img_character: "<img src='images/elements/artoo.png'>"

catcher_phrase: Ready to build the next big thing with Ruby?
getting_started_button: "<a href='/documentation/getting-started' class='cta'> Get Started</a>"
---

%h2 About
%p Artoo is a micro-framework for robotics.

%p It provides a simple, but powerful DSL (domain-specific language) for robots and physical computing.

%p With Artoo, you can easily connect multiple, different hardware devices together into a single Ruby-powered robotic solution.

%p 
  Want to use Javascript on Robots? Check out our sister project Cylon 
  =link_to "(http://cylonjs.com).", "http://cylonjs.com"

%p 
  Want to use the Go programming language to power your robots? Check out our sister project Gobot 
  =link_to "(http://gobot.io).","http://gobot.io"

%h2 Meet The Code
%p Artooâ€™s simple code makes telling robots what to do incredibly simple and fun.
:markdown
  All you need to get started is the `artoo` gem
:markdown
      :::ruby
      require 'artoo'

%p 
  Then hook it up to your robot (in this case, a 
  =link_to "Sphero :","http://gosphero.com"

:markdown
      :::ruby
      connection :sphero, adaptor: :sphero, port: '4560'
      device :sphero, driver: :sphero

%p And tell it what to do!
:markdown
      :::ruby
      work do
        every(3.seconds) do
          puts "Rolling..."
          sphero.roll 60, rand(360)
        end
      end
%h2 Hardware Support
%p 
  Artoo has a extensible system for connecting to hardware devices. The following robotics and physical computing platforms are currently supported:
  %ul
    %li
      = link_to "Ardrone", "http://ardrone2.parrot.com/", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/ardrone", target:"_blank" 
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-ardrone", target:"_blank"
      ) 
    %li
      = link_to "Arduino", "http://www.arduino.cc/", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/arduino", target:"_blank"
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-arduino", target:"_blank"
      ) 
    
    %li
      = link_to "BeagleBone Black", "http://beagleboard.org/", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/beaglebone", target:"_blank"
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-beaglebone", target:"_blank"
      ) 
    %li
      = link_to "Crazyflie", "http://www.bitcraze.se/", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/crazyflie", target:"_blank"
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-crazyflie", target:"_blank"
      )  
    %li
      = link_to "Digispark", "http://digistump.com/products/1", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/digispark", target:"_blank"
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-digispark", target:"_blank"
      )
    %li
      = link_to "Joystick", "http://www.libsdl.org/", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/joystick", target:"_blank" 
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-joystick", target:"_blank"
      )
    %li
      = link_to "Keyboard", "http://en.wikipedia.org/wiki/Computer_keyboard", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/keyboard", target:"_blank" 
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-keyboard", target:"_blank"
      )
    %li
      = link_to "Leap Motion", "https://www.leapmotion.com/", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/leapmotion", target:"_blank" 
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-leapmotion", target:"_blank"
      )
    %li
      = link_to "OpenCV", "http://opencv.org/", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/opencv", target:"_blank"
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-opencv", target:"_blank"
      ) 
    %li
      = link_to "Pebble", "https://getpebble.com/", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/pebble", target:"_blank" 
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-pebble", target:"_blank"
      )
    %li
      = link_to "Raspberry Pi", "http://www.raspberrypi.org/", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/raspi", target:"_blank"
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-raspi", target:"_blank"
      ) 
    %li
      = link_to "Roomba", "http://www.irobot.com/us/learn/Educators/Create.aspx", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/roomba", target:"_blank"
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-roomba", target:"_blank"
      )
    %li
      = link_to "Spark", "http://spark.io", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/spark", target:"_blank"
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-spark", target:"_blank"
      )
    %li
      = link_to "Sphero", "http://www.gosphero.com/", target:"_blank" 
      &lt;==&gt;
      = link_to "Adaptor", "/documentation/platforms/sphero", target:"_blank" 
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-sphero", target:"_blank"
      )

%p More platforms are coming soon!

%p 
  Artoo also has support for devices that can work across multiple hardware platforms.
  %ul
    %li
      = link_to "GPIO (General Purpose Input/Output) devices", "https://en.wikipedia.org/wiki/General_Purpose_Input/Output", target:"_blank" 
      &lt;==&gt; Drivers
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-gpio", target:"_blank" 
      )
      %ul 
        %li= link_to "Analog Sensor", "/documentation/drivers/analog-sensor", target:"_blank" 
        %li= link_to "Button", "/documentation/drivers/button", target:"_blank"  
        %li= link_to "Continuous Servo", "/documentation/drivers/continuous-servo", target:"_blank"   
        %li= link_to "LED", "/documentation/drivers/continuous-servo", target:"_blank"  
        %li= link_to "MakeyButton (high-resistance switch inspired by the MakeyMakey)", "/documentation/drivers/makey-button", target:"_blank" 
        %li= link_to "Motor", "/documentation/drivers/motor", target:"_blank"   
        %li= link_to "Maxbotix Ultrasonic Range Finder", "/documentation/drivers/maxbotix", target:"_blank"  
        %li= link_to "Servo", "/documentation/drivers/servo", target:"_blank" 

    %li
      = link_to "i2c devices", "https://en.wikipedia.org/wiki/I%C2%B2C", target:"_blank" 
      &lt;==&gt; Drivers
      (
      = link_to "repo", "https://github.com/hybridgroup/artoo-i2c", target:"_blank" 
      )
      %ul 
        %li= link_to "BlinkM", "/documentation/drivers/blinkm", target:"_blank"  
        %li= link_to "HMC6352 Digital Compass", "/documentation/drivers/hmc6352-compass", target:"_blank"   
        %li= link_to "Wii Classic Controller", "/documentation/drivers/wiiclassic", target:"_blank"  
        %li= link_to "Wii Nunchuk", "/documentation/drivers/wiichuck", target:"_blank"   
        

%p More platforms are coming soon!

%h2 API
%p Artoo includes a RESTful API to query the status of any robot running within a group, including the connection and device status, and device streaming data via websockets.

:markdown
  To activate the API, use the `api` command like this:
  
:markdown
      :::ruby
      require 'artoo'

      connection :loop
      device :passthru
      api :host => '127.0.0.1', :port => '4321'

      work do
        puts "Hello from the API running at \#{api_host}:\#{api_port}..."
      end

%section.videos
  .video_index
    %h2 Artoo in Action
    %iframe{:src => "http://www.youtube.com/embed/ciSs9x_Ogls", :frameborder => "0", :allowfullscreen => "true"}

