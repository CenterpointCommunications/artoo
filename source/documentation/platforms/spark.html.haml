---
page_title_show: true
title: Spark with Artoo
author: The Hybrid Group
page_title: Spark
page_subtitle: "<a href='https://github.com/hybridgroup/artoo-spark' class='repository'>Repository</a> <a class+'issues' href='https://github.com/hybridgroup/artoo-spark/issues'>Issues</a>"
layout: documentation

analog_sensor_driver: true
button_driver: true
led_driver: true
maxbotix_driver: true
motor_driver: true
servo_driver: true
continuous_servo_driver: true
---

%section.intro
  = image_tag "/images/devices/spark.jpg", class: "display"
  %p 
    This repository contains the Artoo 
    =link_to "(http://artoo.io/)", "http://artoo.io/", target: :blank 
    adaptor for the Spark core device 
    =link_to "(http://spark.io) ", "http://spark.io", target: :blank 
    using the built-in Tinker protocol.

%section.how-to
  %h2 How to install
  %p  Installing artoo with spark support is pretty easy.
  :markdown
        :::bash
        gem install artoo-spark
  %p You will need to have a Spark device, and an access token from a registered Spark account.
  %h2 Using
  %p This small program lets you turn on or off a LED for every 1 sec.
  :markdown
        :::ruby
        require 'artoo'

        connection :spark, :adaptor => :spark, :access_token => 'XYZABC123'
        device :led, :driver => :led, :pin => 'D0'

        work do
          every(1.second) do
            led.toggle
          end
        end
  %h2 Connecting to Spark
  %p Once your Spark is connected via Wifi, you're done. It should keep itself connected, and your Artoo program should be able to connect to it via the Internet, using the access token that Spark has given you.

%section.drivers
  %h2 Drivers
  %p Available drivers for the spark platform are listed below, the drivers contain detailed documentation and examples of what kind physical computing (using artoo and ruby) you could be doing:

  .hardware
    %h2 GPIO Drivers
    .devices
      =# TODO: Update drivers list at the top of the page.
      = partial "documentation/partials/devices_gpio_drivers"