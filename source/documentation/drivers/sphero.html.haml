---
page_title_show: true
title: Artoo - Sphero Driver
author: The Hybrid Group
page_title: Sphero
page_subtitle: Driver
layout: documentation
---
%section.intro
  =image_tag "/images/sphero.jpg", class: "display"
  %p Allows user to interact with the Sphero robotic sphero using Artoo.

%section.how-to
  %h2 How to establish a connection and setup the driver
  %p
    That is pretty simple once the Sphero is ready (connected and listening), you just need three lines of code and you are set,
    Artoo and the Sphero driver take care of the rest.
  :markdown
        :::ruby
        require 'artoo'
        connection :sphero, :adaptor => :sphero, :port => '127.0.0.1:8023'
        device :sphero, :driver => :sphero

%section.public-methods
  %h2 Commands:
  %dl.methods 
    %dt roll(speed, direction) → true | nil
    %dd 
      :markdown
        Starts the sphero rolling at the provided speed (value between `0` and `255`) and direction (value between `0` and `360`).
    %dt stop → true | nil
    %dd Stops the sphero.
    %dt detect_collissions → true | nil
    %dd REVISION PENDING: Sets the sphero to detect collisions and report them.
    %dt messages → [sphero_event]
    %dd REVISION PENDING: Returns an array of sphero events, the messages reported by the sphero.
    %dt color(:color_symbol | [red, green, blue]) → [red_int, green_int, blue_int]
    %dd 
      :markdown
        REVISION PENDING: You can pass a color as a symbol or an array containing RGB colors from `0` to `255` ([`255`, `0`, `0`] == red),
        if passed a symbol returns the array of RGB corresponding to the color, if passed an array of colors it returns the same array 
        (used when setting colors to the sphero).
    %dt set_color([red, green, blue]) → true | nil
    %dd 
      :markdown
        REVISION PENDING: You can either use it in tandem with color to set the color of the sphero or just pass an array containing RGB colors
        on the range `0` to `255` ([`255`, `0`, `0`] == red).

%section.public-events
  %h2 Events:
  %p Public events are triggered when something occurs to your sphero, when this occurs you can execute some code to respond accordingly, depending on the event triggered, you can access the following public events when programming the Sphero.
  %dl.methods 
    %dt :colission
    %dd  Gets triggered when the sphero hits something or falls from a step.
  %h3 How to use events and call them on your drivers
  %p Pretty simple, when the connection and the driver have been setup (as explained above) you can call events on the sphero driver as follows:
  :markdown
        :::ruby
        # :contact is the name of a previously defined method containing the code to execute.
        on sphero, :collision => :contact

%section 
  %h2 Sphero Colors (R,G,B)
  %dl.colors 
    %dt aliceblue            
    %dd 
      .aliceblue.square
      %p (240, 248, 255)
    %dt antiquewhite         
    %dd 
      .antiquewhite.square
      %p (250, 235, 215) 
    %dt aqua                 
    %dd 
      .square.aqua
      %p (0, 255, 255)
    %dt aquamarine           
    %dd
      .square.aquamarine 
      %p (127, 255, 212)
    %dt azure                 
    %dd 
      .square.azure
      %p (240, 255, 255)
    %dt beige                 
    %dd 
      .square.beige
      %p (245, 245, 220)
    %dt bisque                
    %dd 
      .square.bisque
      %p (255, 228, 196)
    %dt black                 
    %dd 
      .square.black
      %p (0, 0, 0)
    %dt blanchedalmond        
    %dd 
      .square.blanchedalmond
      %p (255, 235, 205)
    %dt blue                 
    %dd 
      .square.blue
      %p (0, 0, 255)
    %dt blueviolet            
    %dd 
      .square.blueviolet
      %p (138, 43, 226)
    %dt brown                 
    %dd 
      .square.brown
      %p (165, 42, 42)
    %dt burlywood             
    %dd 
      .square.burlywood
      %p (222, 184, 135)
    %dt cadetblue             
    %dd
      .square.cadetblue 
      %p (95, 158, 160)
    %dt chartreuse            
    %dd 
      .square.chartreuse
      %p (127, 255, 0)
    %dt chocolate             
    %dd 
      .square.chocolate
      %p (210, 105, 30)
    %dt coral                 
    %dd 
      .square.coral
      %p (255, 127, 80)
    %dt cornflowerblue        
    %dd 
      .square.cornflowerblue
      %p (100, 149, 237)
    %dt cornsilk              
    %dd   
      .square.cornsilk
      %p (255, 248, 220)
    %dt crimson               
    %dd 
      .square.crimson
      %p (220, 20, 60)
    %dt cyan                  
    %dd 
      .square.cyan
      %p (0, 255, 255)
    %dt darkblue              
    %dd 
      .square.darkblue
      %p (0, 0, 139)
    %dt darkcyan              
    %dd 
      .square.darkcyan
      %p (0, 139, 139)
    %dt darkgoldenrod         
    %dd 
      .square.darkgoldenrod
      %p (184, 134, 11)
    %dt darkgray              
    %dd 
      .square.darkgray
      %p (169, 169, 169)
    %dt darkgreen             
    %dd 
      .square.darkgreen
      %p (0, 100, 0)
    %dt darkkhaki             
    %dd 
      .square.darkkhaki
      %p (189, 183, 107)
    %dt darkmagenta           
    %dd 
      .square.darkmagenta
      %p (139, 0, 139)
    %dt darkolivegreen        
    %dd 
      .square.darkolivegreen
      %p (85, 107, 47)
    %dt darkorange            
    %dd 
      .square.darkorange
      %p (255, 140, 0)
    %dt darkorchid            
    %dd 
      .square.darkorchid
      %p (153, 50, 204)
    %dt darkred               
    %dd 
      .square.darkred
      %p (139, 0, 0)
    %dt darksalmon            
    %dd 
      .square.darksalmon
      %p (233, 150, 122)
    %dt darkseagreen          
    %dd 
      .square.darkseagreen
      %p (143, 188, 143)
    %dt darkslateblue         
    %dd 
      .square.darkslateblue
      %p (72, 61, 139)
  %dl.colors   
    %dt darkslategray         
    %dd 
      .square.darkslategray
      %p (47, 79, 79)
    %dt darkturquoise         
    %dd 
      .square.darkturquoise
      %p (0, 206, 209)
    %dt darkviolet            
    %dd 
      .square.darkviolet
      %p (148, 0, 211)
    %dt deeppink              
    %dd 
      .square.deeppink
      %p (255, 20, 147)
    %dt deepskyblue           
    %dd 
      .square.deepskyblue
      %p (0, 191, 255)
    %dt dimgray               
    %dd 
      .square.dimgray
      %p (105, 105, 105)
    %dt dodgerblue            
    %dd 
      .square.dodgerblue
      %p (30, 144, 255)
    %dt firebrick:             
    %dd 
      .square.firebrick
      %p (178, 34, 34)
    %dt floralwhite           
    %dd 
      .square.floralwhite
      %p (255, 250, 240)
    %dt forestgreen           
    %dd 
      .square.forestgreen
      %p (34, 139, 34)
    %dt fuchsia               
    %dd 
      .square.fuchsia
      %p (255, 0, 255)
    %dt gainsboro             
    %dd 
      .square.gainsboro
      %p (220, 220, 220)
    %dt ghostwhite            
    %dd 
      .square.ghostwhite
      %p (248, 248, 255)
    %dt gold                  
    %dd 
      .square.gold
      %p (255, 215, 0)
    %dt goldenrod             
    %dd 
      .square.goldenrod
      %p (218, 165, 32)
    %dt gray                  
    %dd 
      .square.gray
      %p (128, 128, 128)
    %dt green                 
    %dd 
      .square.green
      %p (0, 128, 0)
    %dt greenyellow           
    %dd 
      .square.greenyellow
      %p (173, 255, 47)
    %dt honeydew              
    %dd 
      .square.honeydew
      %p (240, 255, 240)
    %dt hotpink               
    %dd 
      .square.hotpink
      %p (255, 105, 180)
    %dt indianred             
    %dd 
      .square.indianred
      %p (205, 92, 92)
    %dt indigo                
    %dd 
      .square.indigo
      %p (75, 0, 130)
    %dt ivory                 
    %dd 
      .square.ivory
      %p (255, 255, 240)
    %dt khaki                 
    %dd 
      .square.khaki
      %p (240, 230, 140)
    %dt lavender              
    %dd 
      .square.lavender
      %p (230, 230, 250)
    %dt lavenderblush         
    %dd 
      .square.lavenderblush
      %p (255, 240, 245)
    %dt lawngreen             
    %dd 
      .square.lawngreen
      %p (124, 252, 0)
    %dt lemonchiffon          
    %dd 
      .square.lemonchiffon
      %p (255, 250, 205)
    %dt lightblue             
    %dd 
      .square.lightblue
      %p (173, 216, 230)
    %dt lightcoral            
    %dd 
      .square.lightcoral
      %p (240, 128, 128)
    %dt lightcyan             
    %dd 
      .square.lightcyan
      %p (224, 255, 255) 
    %dt lightgoldenrodyellow  
    %dd 
      .square.lightgoldenrodyellow
      %p (250, 250, 210)
    %dt lightgreen            
    %dd 
      .square.lightgreen
      %p (144, 238, 144)
    %dt lightgrey             
    %dd 
      .square.lightgrey
      %p (211, 211, 211)
    %dt lightpink             
    %dd 
      .square.lightpink
      %p (255, 182, 193)
  %dl.colors   
    %dt lightsalmon           
    %dd 
      .square.lightsalmon
      %p (255, 160, 122)
    %dt lightseagreen         
    %dd 
      .square.lightseagreen
      %p (32, 178, 170)
    %dt lightskyblue          
    %dd 
      .square.lightskyblue
      %p (135, 206, 250)
    %dt lightslategray        
    %dd 
      .square.lightslategray
      %p (119, 136, 153)
    %dt lightsteelblue        
    %dd 
      .square.lightsteelblue
      %p (176, 196, 222)
    %dt lightyellow           
    %dd 
      .square.lightyellow
      %p (255, 255, 224)
    %dt lime                  
    %dd 
      .square.lime
      %p (0, 255, 0)
    %dt limegreen             
    %dd 
      .square.limegreen
      %p (50, 205, 50)
    %dt linen                 
    %dd 
      .square.linen
      %p (250, 240, 230)
    %dt magenta               
    %dd 
      .square.magenta
      %p (255, 0, 255)
    %dt maroon                
    %dd 
      .square.maroon
      %p (128, 0, 0)
    %dt mediumaquamarine      
    %dd 
      .square.mediumaquamarine
      %p (102, 205, 170)
    %dt mediumblue            
    %dd 
      .square.mediumblue
      %p (0, 0, 205)
    %dt mediumorchid          
    %dd 
      .square.mediumorchid
      %p (186, 85, 211)
    %dt mediumpurple          
    %dd 
      .square.mediumpurple
      %p (147, 112, 219)
    %dt mediumseagreen        
    %dd 
      .square.mediumseagreen
      %p (60, 179, 113)
    %dt mediumslateblue       
    %dd 
      .square.mediumslateblue
      %p (123, 104, 238)
    %dt mediumspringgreen     
    %dd 
      .square.mediumspringgreen
      %p (0, 250, 154)
    %dt mediumturquoise       
    %dd 
      .square.mediumturquoise
      %p (72, 209, 204)
    %dt mediumvioletred       
    %dd 
      .square.mediumvioletred
      %p (199, 21, 133)
    %dt midnightblue          
    %dd 
      .square.midnightblue
      %p (25, 25, 112)
    %dt mintcream             
    %dd 
      .square.mintcream
      %p (245, 255, 250)
    %dt mistyrose             
    %dd 
      .square.mistyrose
      %p (255, 228, 225)
    %dt moccasin              
    %dd 
      .square.moccasin
      %p (255, 228, 181)
    %dt navajowhite           
    %dd 
      .square.navajowhite
      %p (255, 222, 173)
    %dt navy                  
    %dd 
      .square.navy
      %p (0, 0, 128)
    %dt oldlace               
    %dd 
      .square.oldlace
      %p (253, 245, 230)
    %dt olive                 
    %dd 
      .square.olive
      %p (128, 128, 0)
    %dt olivedrab             
    %dd 
      .square.olivedrab
      %p (107, 142, 35)
    %dt orange                
    %dd 
      .square.orange
      %p (255, 165, 0)
    %dt orangered             
    %dd 
      .square.orangered
      %p (255, 69, 0)
    %dt orchid                
    %dd 
      .square.orchid
      %p (218, 112, 214)
    %dt palegoldenrod         
    %dd 
      .square.palegoldenrod
      %p (238, 232, 170)
    %dt palegreen             
    %dd 
      .square.palegreen
      %p (152, 251, 152)
    %dt paleturquoise         
    %dd 
      .square.paleturquoise
      %p (175, 238, 238)
  %dl.colors   
    %dt palevioletred         
    %dd 
      .square.palevioletred
      %p (219, 112, 147)
    %dt papayawhip            
    %dd 
      .square.papayawhip
      %p (255, 239, 213)
    %dt peachpuff             
    %dd 
      .square.peachpuff
      %p (255, 218, 185)
    %dt peru                  
    %dd 
      .square.peru
      %p (205, 133, 63)
    %dt pink                  
    %dd 
      .square.pink
      %p (255, 192, 203)
    %dt plum                  
    %dd 
      .square.plum
      %p (221, 160, 221)
    %dt powderblue            
    %dd 
      .square.powderblue
      %p (176, 224, 230)
    %dt purple                
    %dd 
      .square.purple
      %p (128, 0, 128)
    %dt red                   
    %dd 
      .square.red
      %p (255, 0, 0)
    %dt rosybrown             
    %dd 
      .square.rosybrown
      %p (188, 143, 143)
    %dt royalblue             
    %dd 
      .square.royalblue
      %p (65, 105, 225)
    %dt saddlebrown           
    %dd 
      .square.saddlebrown
      %p (139, 69, 19)
    %dt salmon                
    %dd 
      .square.salmon
      %p (250, 128, 114)
    %dt sandybrown            
    %dd 
      .square.sandybrown
      %p (244, 164, 96)
    %dt seagreen              
    %dd 
      .square.seagreen
      %p (46, 139, 87)
    %dt seashell              
    %dd 
      .square.seashell
      %p (255, 245, 238)
    %dt sienna                
    %dd 
      .square.sienna
      %p (160, 82, 45)
    %dt silver                
    %dd 
      .square.silver
      %p (192, 192, 192)
    %dt skyblue               
    %dd 
      .square.skyblue
      %p (135, 206, 235)
    %dt slateblue             
    %dd 
      .square.slateblue
      %p (106, 90, 205)
    %dt slategray             
    %dd 
      .square.slategray
      %p (112, 128, 144)
    %dt snow                  
    %dd 
      .square.snow
      %p (255, 250, 250)
    %dt springgreen           
    %dd 
      .square.springgreen
      %p (0, 255, 127)
    %dt steelblue             
    %dd 
      .square.steelblue
      %p (70, 130, 180)
    %dt tan                   
    %dd 
      .square.tan
      %p (210, 180, 140)
    %dt teal                  
    %dd 
      .square.teal
      %p (0, 128, 128)
    %dt thistle               
    %dd 
      .square.thistle
      %p (216, 191, 216)
    %dt tomato                
    %dd 
      .square.tomato
      %p (255, 99, 71)
    %dt turquoise             
    %dd 
      .square.turquoise
      %p (64, 224, 208)
    %dt violet                
    %dd 
      .square.violet
      %p (238, 130, 238)
    %dt wheat                 
    %dd 
      .square.wheat
      %p (245, 222, 179)
    %dt white                 
    %dd 
      .square.white
      %p (255, 255, 255)
    %dt whitesmoke            
    %dd 
      .square.whitesmoke
      %p (245, 245, 245)
    %dt yellow                
    %dd 
      .square.yellow
      %p (255, 255, 0)
    %dt yellowgreen           
    %dd 
      .square.yellowgreen
      %p (154, 205, 50)
      
%section.how-to
  %h2 How to use
  %h3 Example to roll the sphero in a random direction and change direction every 3 seconds.
  :markdown
        :::ruby
        require 'artoo'

        connection :sphero, :adaptor => :sphero, :port => '127.0.0.1:4567'
        device :sphero, :driver => :sphero

        work do
          @rolling = false

          every(3.seconds) do
            puts "Rolling..."
            unless @rolling
              sphero.roll 90, rand(360)
              @rolling = true
            else
              sphero.stop
              @rolling = false
            end
          end
        end

%section.compatability.hardware
  %h2 Works with:
  =# TODO: Update platform list with all that work with this driver in artoo.
  .devices
    = partial "documentation/partials/sphero"
